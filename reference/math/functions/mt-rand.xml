<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.mt-rand" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mt_rand</refname>
  <refpurpose>Generate a better random value</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <void/>
  </methodsynopsis>
  <methodsynopsis>
   <type>int</type><methodname>mt_rand</methodname>
   <methodparam><type>int</type><parameter>min</parameter></methodparam>
   <methodparam><type>int</type><parameter>max</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Many random number generators of older libcs have dubious or
   unknown characteristics and are slow. By default, PHP uses the
   libc random number generator with the <function>rand</function>
   function.  The <function>mt_rand</function> function is a drop-in
   replacement for this.  It uses a random number generator with
   known characteristics using the <link xlink:href="&url.mersenne;">
   Mersenne Twister</link>, which will produce random numbers four times
   faster than what the average libc rand() provides.
  </simpara>
  <simpara>
   If called without the optional <parameter>min</parameter>,
   <parameter>max</parameter> arguments <function>mt_rand</function>
   returns a pseudo-random value between 0 and
   <function>mt_getrandmax</function>.  If you want a random number
   between 5 and 15 (inclusive), for example, use <literal>mt_rand(5,
   15)</literal>.
  </simpara>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>min</parameter></term>
     <listitem>
      <para>
       Optional lowest value to be returned (default: 0)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max</parameter></term>
     <listitem>
      <para>
       Optional highest value to be returned (default: <function>mt_getrandmax</function>)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A random integer value between <parameter>min</parameter> (or 0)
   and <parameter>max</parameter> (or <function>mt_getrandmax</function>, inclusive),
   or &false; if <parameter>max</parameter> is less than <parameter>min</parameter>.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.4</entry>
       <entry>
        Issues an <constant>E_WARNING</constant> and returns &false; if
        <parameter>max</parameter> &lt; <parameter>min</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mt_rand</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo mt_rand() . "\n";
echo mt_rand() . "\n";

echo mt_rand(5, 15);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
1604716014
1478613278
6
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &caution.cryptographically-insecure;
  <caution>
   <para>
    The distribution of <function>mt_rand</function> return values is biased
    towards even numbers on 64-bit builds of PHP when
    <parameter>max</parameter> is beyond <literal>2^32</literal>.
    This is because if <parameter>max</parameter> is greater than 
    the value returned by <function>mt_getrandmax</function>, the output of the
    random number generator must be scaled up.
   </para>
  </caution>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mt_srand</function></member>
    <member><function>mt_getrandmax</function></member>
    <member><function>openssl_random_pseudo_bytes</function></member>
    <member><function>rand</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
