<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="pht.queue.front" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>pht\Queue::front</refname>
  <refpurpose>Returns the first value from a queue</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>pht\Queue::front</methodname>
   <void />
  </methodsynopsis>
  <para>
   This method will remove a value from the front of the queue (in constant
   time). Attempting to return the front value from an empty queue will result
   in an <classname>Error</classname> exception.
  </para>

  <caution>
   <para>
    Due to the fact that all values in a <classname>pht\Queue</classname> are
    serialised, extracting a value from the queue will require it to be
    deserialised. This can incur a noticeable performance hit if the inspection
    of the queue's front value is performed within a loop.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The value on the front of the queue.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Retrieving the front value of a queue</title>
    <programlisting role="php">
<![CDATA[
<?php

use pht\Queue;

$queue = new Queue();

$queue->push(1);

var_dump($queue->front());
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(1)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Retrieving the front value in a loop (bad example - don't do this)</title>
    <programlisting role="php">
<![CDATA[
<?php

use pht\Queue;

$queue = new Queue();

$queue->push(array_fill(0, 2000, 0));

for ($i = 0; $i < count($queue->front()); ++$i); // quadratic runtime
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Retrieving the front value in a loop (good example)</title>
    <programlisting role="php">
<![CDATA[
<?php

use pht\Queue;

$queue = new Queue();

$queue->push(array_fill(0, 2000, 0));

$front = $queue->front(); // create a separate variable
for ($i = 0; $i < count($front); ++$i); // linear runtime
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
